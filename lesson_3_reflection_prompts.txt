When would you want to use a remote repository rather than keeping all your work local?
    When I want to share my work locally to everyone and save it to access it from any computer.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
    It gives us an upper hand on what changes we want in our repositories and which we do not want in our repositories. When it's manual, it gives us the power to chose which changes to commit and which to not.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
    Forks, clones, and branches are all ways to add new changes without
    affecting the existing version.  With branches the new changes are added in
    the same repository.  Forking and cloning both copy an entire repository to
    a new location.  The difference between forking and cloning is that forking
    is a special construct made by GitHub.  You can only fork a GitHub
    repository to another location on GitHub, while you can clone any Git
    repository to anywhere you have access to.

    I use branching for most cases where I want to add new changes to a
    repository while keeping an easy reference to a previous version, especially
    when collaborating with other people.  I clone a repository on GitHub when I
    want to work on that repository locally rather than using the GitHub
    website.  I fork a repository on GitHub when I want to make changes to that
    repository public, but I don't have permission to modify the original.

What is the benefit of having a copy of the last known state of the remote stored locally?
    When we are without internet connection, and we want to see changes in remote version
    we can easily see it locally. and it also helps in locally merging the changes done in
    remote and local repositories.

